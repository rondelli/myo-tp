~NOTA: creé un repo con lo de Agus Vidal! creo que deebríamos continuar con lo nuestro y al final comparar nuestros resultados con los de ella

--> HOLIS :DD Incorporé al modelo 5 la funcion de Agus. Veo que en el resultado hay archivos repetidos, no sé si eso esta bien :s --> en todo caso, esa mejora puede
incorporarce en la parte 6. Ahi tambien podemos usar un algoritmo mejorado para generar el conjunto H. Voy buscando el n de la parte 5, es 900 > n > 870.


Lo que falta es:


### MODELOS 5 Y 6 ###
* Revisar bien las partes 5 y 6:
    * Ví que la parte 5 devuelve muy rápido soluciones que son factibles pero no óptimas. Tal vez habría que hacer algo para que, si todavía hay tiempo, siga buscando hasta 
    encontrar una óptima. 
    ~En realidad, eso está así porque el lo pidió. Termina cuando la función objetivo es < 1... o, al menos, si quería algo más, no lo dijo.
    # Okis, queda asi entonces.

    Supongo que en la parte 6 pasa lo mismo, pero bueno, lo noté en la parte 5 por ahora --> con f0017 (o f0018) la parte 5 devuelve un factible que no
    es óptimo, pero la parte 6 sí devuelve el óptimo (o al menos devuelve el mismo resultado que la parte 1).
    
    * Si en el tiempo límite no encontró ninguna solución óptima, estaría bueno que al menos devuelva una solución que sea factible (no sé si hacemos esto jeje).

    ~no lo hacemos. puede devolver el x, la solución primal. esta, entiendo, sería factible. modifico el código para añadir eso. igual, no sé si es lo ideal, porque creo que no lo hacemos en otro modelo.

    * La parte 6 genera sólo los conjuntos que utiliza, ni más ni menos. No sé si está mal, pero al menos es raro jaja. La parte 5, en cambio, genera muchos conjuntos, y sólo usa
    algunos.

### INFORME ###
* Informe --> actualizar todo básicamente.
    ⤷ recordar modelar el dual de la parte 5

### PARTE 7 ###
* Buscar las cotas (n_x).
* Llenar las carpetas IN y OUT con archivos caso_i.in/caso_i.out.

El modelo 1 no limita bien el tiempo: [Debugging] [MODELO 1] Time: 589.0
El modelo 4 consume memoria excesiva en la generación de subconjuntos para n >= 512